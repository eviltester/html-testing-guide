"use strict";(self.webpackChunkhtml_testing_reference=self.webpackChunkhtml_testing_reference||[]).push([[110],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(n),d=l,y=m["".concat(s,".").concat(d)]||m[d]||c[d]||i;return n?r.createElement(y,a(a({ref:t},p),{},{components:n})):r.createElement(y,a({ref:t},p))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,a=new Array(i);a[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,a[1]=o;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8286:(e,t,n)=>{n.d(t,{VH:()=>l,W5:()=>i,aN:()=>a});var r=n(7294);function l(e){let{data:t}=e;return r.createElement("ul",null,t.links.map(((e,t)=>r.createElement("li",null,r.createElement("a",{href:e},e)))))}function i(e){let{data:t}=e;return r.createElement("ul",null,t.ideas.map(((e,t)=>r.createElement("li",null,e))))}function a(e){let{data:t}=e;return r.createElement("ul",null,r.createElement("li",null,t.cssSelector))}},6710:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(7462),l=(n(7294),n(3905)),i=n(8286);const a={links:["https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number"],cssSelector:'input[type="number"]',ideas:['Number may include characters you don\'t expect, try them e.g. "e", ".","-","+"','Try changing the type to "text" and submitting a very invalid input.']},o='type="number"',s={unversionedId:"html elements/input/input-type-number",id:"html elements/input/input-type-number",title:'type="number"',description:'Number is not restricted to positive Integer so it is possible to add characters that the server or follow on functionality is not expecting e.g. "-.e" so we need to try the full range of input characters.',source:"@site/docs/html elements/input/input-type-number.mdx",sourceDirName:"html elements/input",slug:"/html elements/input/input-type-number",permalink:"/html-testing-guide/docs/html elements/input/input-type-number",draft:!1,tags:[],version:"current",frontMatter:{links:["https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number"],cssSelector:'input[type="number"]',ideas:['Number may include characters you don\'t expect, try them e.g. "e", ".","-","+"','Try changing the type to "text" and submitting a very invalid input.']},sidebar:"tutorialSidebar",previous:{title:'type="hidden"',permalink:"/html-testing-guide/docs/html elements/input/input-type-hidden"},next:{title:'type="text"',permalink:"/html-testing-guide/docs/html elements/input/input-type-text"}},u={},p=[{value:"Exercises",id:"exercises",level:2},{value:"Useful Links",id:"useful-links",level:2},{value:"CSS Selector",id:"css-selector",level:2},{value:"Test Ideas",id:"test-ideas",level:2}],c={toc:p};function m(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"typenumber"},(0,l.kt)("inlineCode",{parentName:"h1"},'type="number"')),(0,l.kt)("p",null,'Number is not restricted to positive Integer so it is possible to add characters that the server or follow on functionality is not expecting e.g. "-.e" so we need to try the full range of input characters.'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'<input type="number" value="10"/>\n')),(0,l.kt)("input",{type:"number",defaultValue:"10"}),(0,l.kt)("h2",{id:"exercises"},"Exercises"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"What can you enter in the ",(0,l.kt)("a",{parentName:"li",href:"https://testpages.herokuapp.com/styled/html5-form-test.html"},"Test Pages HTML5 Form")," as a number which might cause validation errors on the server side?",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://testpages.herokuapp.com/styled/html5-form-test.html"},"https://testpages.herokuapp.com/styled/html5-form-test.html"))))),(0,l.kt)("h2",{id:"useful-links"},"Useful Links"),(0,l.kt)(i.VH,{data:a,mdxType:"UsefulLinks"}),(0,l.kt)("h2",{id:"css-selector"},"CSS Selector"),(0,l.kt)(i.aN,{data:a,mdxType:"CSSSelectors"}),(0,l.kt)("h2",{id:"test-ideas"},"Test Ideas"),(0,l.kt)(i.W5,{data:a,mdxType:"TestIdeas"}))}m.isMDXComponent=!0}}]);